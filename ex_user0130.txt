CREATE TABLE EMP (
    ENO     NUMBER(4),
    ENAME   VARCHAR2(10),
    JOB     VARCHAR2(9),
    MANAGER     NUMBER(4),
    HIREDATE    DATE,
    SALARY  NUMBER(7,2),
    COMMISSION  NUMBER(7,2),
    DNO     NUMBER(2)
);    

--테이블이 기존에 만들어진건지 확인하기 위해 DROP사용
DROP TABLE EMPLOYEE;
DROP TABLE DEPARTMENT;
DROP TABLE SALGRADE;

CREATE TABLE DEPARTMENT
        (DNO NUMBER(2) CONSTRAINT PK_DEPT PRIMARY KEY,
         DNAME VARCHAR2(14),
	 LOC   VARCHAR2(13) ) ;
CREATE TABLE EMPLOYEE 
        (ENO NUMBER(4) CONSTRAINT PK_EMP PRIMARY KEY,
	 ENAME VARCHAR2(10),
 	 JOB   VARCHAR2(9),
	 MANAGER  NUMBER(4),
	 HIREDATE DATE,
	 SALARY NUMBER(7,2),
	 COMMISSION NUMBER(7,2),
	 DNO NUMBER(2) CONSTRAINT FK_DNO REFERENCES DEPARTMENT);
CREATE TABLE SALGRADE
        (GRADE NUMBER,
	 LOSAL NUMBER,
	 HISAL NUMBER );

INSERT INTO DEPARTMENT VALUES (10,'ACCOUNTING','NEW YORK');
INSERT INTO DEPARTMENT VALUES (20,'RESEARCH','DALLAS');
INSERT INTO DEPARTMENT VALUES (30,'SALES','CHICAGO');
INSERT INTO DEPARTMENT VALUES (40,'OPERATIONS','BOSTON');

INSERT INTO EMPLOYEE VALUES
(7369,'SMITH','CLERK',    7902,to_date('17-12-1980','dd-mm-yyyy'),800,NULL,20);
INSERT INTO EMPLOYEE VALUES
(7499,'ALLEN','SALESMAN', 7698,to_date('20-2-1981', 'dd-mm-yyyy'),1600,300,30);
INSERT INTO EMPLOYEE VALUES
(7521,'WARD','SALESMAN',  7698,to_date('22-2-1981', 'dd-mm-yyyy'),1250,500,30);
INSERT INTO EMPLOYEE VALUES
(7566,'JONES','MANAGER',  7839,to_date('2-4-1981',  'dd-mm-yyyy'),2975,NULL,20);
INSERT INTO EMPLOYEE VALUES
(7654,'MARTIN','SALESMAN',7698,to_date('28-9-1981', 'dd-mm-yyyy'),1250,1400,30);
INSERT INTO EMPLOYEE VALUES
(7698,'BLAKE','MANAGER',  7839,to_date('1-5-1981',  'dd-mm-yyyy'),2850,NULL,30);
INSERT INTO EMPLOYEE VALUES
(7782,'CLARK','MANAGER',  7839,to_date('9-6-1981',  'dd-mm-yyyy'),2450,NULL,10);
INSERT INTO EMPLOYEE VALUES
(7788,'SCOTT','ANALYST',  7566,to_date('13-07-1987', 'dd-mm-yyyy'),3000,NULL,20);
INSERT INTO EMPLOYEE VALUES
(7839,'KING','PRESIDENT', NULL,to_date('17-11-1981','dd-mm-yyyy'),5000,NULL,10);
INSERT INTO EMPLOYEE VALUES
(7844,'TURNER','SALESMAN',7698,to_date('8-9-1981',  'dd-mm-yyyy'),1500,0,30);
INSERT INTO EMPLOYEE VALUES
(7876,'ADAMS','CLERK',    7788,to_date('13-07-1987', 'dd-mm-yyyy'),1100,NULL,20);
INSERT INTO EMPLOYEE VALUES
(7900,'JAMES','CLERK',    7698,to_date('3-12-1981', 'dd-mm-yyyy'),950,NULL,30);
INSERT INTO EMPLOYEE VALUES
(7902,'FORD','ANALYST',   7566,to_date('3-12-1981', 'dd-mm-yyyy'),3000,NULL,20);
INSERT INTO EMPLOYEE VALUES
(7934,'MILLER','CLERK',   7782,to_date('23-1-1982', 'dd-mm-yyyy'),1300,NULL,10);

INSERT INTO SALGRADE VALUES (1, 700,1200);
INSERT INTO SALGRADE VALUES (2,1201,1400);
INSERT INTO SALGRADE VALUES (3,1401,2000);
INSERT INTO SALGRADE VALUES (4,2001,3000);
INSERT INTO SALGRADE VALUES (5,3001,9999);

--생성된 데이터 확정
COMMIT;

--QUIZ_1 
--제약사항)기본키는 ORDER_ID/ ORDER_MODE에는 'direct','online'만 입력가능/ ORDER_TOTAL의 디폴트 값 0 
CREATE TABLE ORDERS (
    ORDER_ID        NUMBER(12,0) PRIMARY KEY,
    ORDER_DATE      DATE,
    ORDER_MODE      VARCHAR2(8 BYTE),
    CUSTOMER_ID     NUMBER(6,0),
    ORDER_STATUS    NUMBER(2,0) DEFAULT 0,
    ORDER_TOTAL     NUMBER(8,2),
    SALES_REP_ID    NUMBER(6,0),
    PROMOTION_ID    NUMBER(6,0),
  --CONSTRAINT pk_ORDER PRIMARY KEY (ORDER_ID),
    CONSTRAINT ck_ORDER_MODE CHECK (ORDER_MODE in ('direct', 'online'))
);


--QUIZ_2
--기본키 ORDER_ID + LINE_ITEM_ID/ UNIT_PRICE, QUANTITY 디폴트 0
CREATE TABLE ORDER_ITEMS (
    ORDER_ID        NUMBER(12,0),
    LINE_ITEM_ID    NUMBER(3,0),
    PRODUCT_ID      NUMBER(3,0),
    UNIT_PRICE      NUMBER(8,2) DEFAULT 0,
    QUANTITY        NUMBER(8,0) DEFAULT 0,
    CONSTRAINT pk_ORDER_ITEM PRIMARY KEY (ORDER_ID, LINE_ITEM_ID) 
  --여러컬럼을 하나의 기본키로 만들땐 'CONSTRAINT' 키워드 사용해야함
);

--QUIZ_3
--기본키 PROMO_ID
CREATE TABLE PROMOTIONS (
    PROMO_ID    NUMBER(6,0) PRIMARY KEY,
    PROMO_NAME  VARCHAR2(20)
);

--QUIZ_4
--최소값 1, 최대값 9999, 1000부터 시작해서 1씩 증가하는 ORDER_SEQ 시퀀스 만들기
 CREATE SEQUENCE ORDERS_SEQ
 INCREMENT BY 1
 START WITH 1000
 MINVALUE 1
 MAXVALUE 9999
 NOCYCLE
 NOCACHE
 NOORDER;


--QUIZ_5
--1.긴 이름을 저장할 수 있도록 EMP테이블 수정(ENAME칼럼)
 ALTER TABLE EMP MODIFY ENAME VARCHAR2(50);
 
 --2.EMPLOYEE 테이블 복사 EMPLOYEE2 생성
 CREATE TABLE EMPLOYEE2 AS 
 SELECT ENO, ENAME, SALARY, DNO     --사번,이름,급여,부서번호 칼럼만 복사
 FROM EMPLOYEE;
 
 --새로 생성된 칼럼명 EMP_ID, NAME, SAL, DEPT_ID로 지정
 ALTER TABLE EMPLOYEE2 RENAME COLUMN ENO TO EMP_ID;
 ALTER TABLE EMPLOYEE2 RENAME COLUMN ENAME TO NAME;
 ALTER TABLE EMPLOYEE2 RENAME COLUMN SALARY TO SAL;
 ALTER TABLE EMPLOYEE2 RENAME COLUMN DNO TO DEPT_ID;
 --CREATE TABLE EMPLOYEE2(EMP_ID, NAME, SAL, DEPT_ID) AS 
 --SELECT ENO, ENAME, SALARY, DNO FROM EMPLOYEE;        /한번에 가능
 
 --3.EMP테이블 삭제
 DROP TABLE EMP; 
 
 --4.EMPLOYEE2 이름변경 EMP
 ALTER TABLE EMPLOYEE2 RENAME TO EMP;
 --RENAME EMPLOYEE2 TO EMP;
 
 --5.DEPT 테이블에서 DNAME칼럼 제거
 ALTER TABLE DEPT DROP COLUMN DNAME;
 
 --6.DEPT 테이블에서 LOC칼럼을 UNUSED로 표시
 ALTER TABLE DEPT 
 SET UNUSED (LOC);
 --ALTER TABLE DEPT RENAME COLUMN LOC TO UNUSED;
 
 --7.UNUSED 칼럼 모두 제거
 ALTER TABLE DEPT DROP UNUSED COLUMNS;
 
 
 --QUIZ_6
 --테이블생성
 CREATE TABLE EMP01 (
    EMPNO       NUMBER(4),
    ENAME       VARCHAR2(10),
    HIREDATE    DATE
);

 --1.번호가 자동으로 생성되도록 EMPNO_SEQ 시퀀스 생성
 --  (시작값 1/ 증가값 1/ 최대값 100000)
 CREATE SEQUENCE EMPNO_SEQ
 INCREMENT BY 1
 START WITH 1
 MAXVALUE 100000
 NOCYCLE
 NOCACHE;
 
 --2.사원번호(EMPNO)를 시퀀스로부터 발급받아 왼쪽 테이블에 데이터 입력
 --  (1)사원이름: JOHN, 입사일: SYSDATE/ 2)사원이름: TOM, 입사일: SYSDATE)
 INSERT INTO EMP01 VALUES (EMPNO_SEQ.NEXTVAL, 'JOHN', SYSDATE);
 INSERT INTO EMP01 VALUES (EMPNO_SEQ.NEXTVAL, 'TOM', SYSDATE);
 
 --3.EMP01테이블의 '이름 칼럼'을 인덱스로 설정하되 인덱스 이름은 IDX_EMP01_EName 지정
 CREATE UNIQUE INDEX IDX_EMP01_EName
 ON EMP01 (ENAME);
 


























