--QUIZ_chap06_ex2
--1.Equi(동등)조인 사용하여 SCOTT 사원의 부서번호와 부서이름 출력
 SELECT A.ENAME, A.DNO, D.DNAME
   FROM EMPLOYEE A,
        DEPARTMENT D
 WHERE A.DNO = D.DNO
    AND A.ENAME = 'SCOTT';

--2.INNER조인과 ON연산자를 사용하여 사원이름과 함께 그 사원이 소속된 부서이름과 지역명 출력
 SELECT A.ENAME, D.DNAME, D.LOC
   FROM EMPLOYEE A
     INNER JOIN DEPARTMENT D
     ON (A.DNO = D.DNO)
 ORDER BY D.DNAME;

--3.INNER조인 USING 연산자 사용하여 10번 부서에 속하는 모든 담당업무의 고유목록을 부서의 지역명 포함하여 출력
 SELECT DNO, A.JOB, D.DNAME, D.LOC
   FROM EMPLOYEE A
     INNER JOIN DEPARTMENT D
     USING (DNO)
  WHERE DNO = 10;
  
--teacher
 SELECT DNO, JOB, DNAME, LOC
   FROM EMPLOYEE 
     INNER JOIN DEPARTMENT 
     USING (DNO)
  WHERE DNO = 10;

--4.EQUI JOIN과 WILD카드 사용하여 이름에 A가 포함된 모든 사원의 이름과 부서명 출력
 SELECT A.ENAME, D.DNAME
  FROM EMPLOYEE A, DEPARTMENT D
 WHERE ENAME LIKE '%A%'	; 
 
--teacher
 SELECT A.ENAME, D.DNAME
  FROM EMPLOYEE A, DEPARTMENT D
 WHERE A.DNO = D.DNO
    AND ENAME LIKE '%A%'	; 

--5.SELF JOIN 사용-사원의 이름 및 사번을 관리자 이름+관리자 번호와 함께 출력
--  각 열의 별칭은 사원이름(EMPLOYEE) 사번(EMP#) 관리자이름(MANAGER) 관리자번호(MGR#)
 SELECT A.ENAME AS "EMPLOYEE", 
        A.ENO AS "EMP#", 
        B.ENAME AS "MANAGER", 
        B.MANAGER AS "MGR#"
  FROM EMPLOYEE A, EMPLOYEE B
 WHERE A.ENO = B.MANAGER
 ORDER BY A.ENAME;    
 
--teacher
 SELECT A.ENAME AS "EMPLOYEE", 
        A.MANAGER AS "EMP#", 
        B.ENAME AS "MANAGER", 
        B.ENO AS "MGR#"
  FROM EMPLOYEE A, EMPLOYEE B
 WHERE A.MANAGER = B.ENO;

--6.SELF조인 사용-SCOTT의 이름,부서번호 + 동일한부서에서 근무하는 사원 출력
--  별칭 - 이름, 부서번호, 동료
 SELECT A.ENAME AS "이름", A.DNO AS "부서번호", B.ENAME AS "동료"
   FROM EMPLOYEE A, EMPLOYEE B
 WHERE A.DNO = B.DNO
    AND A.ENAME = 'SCOTT';

--TEACHER
 SELECT A.ENAME AS "이름", A.DNO AS "부서번호", B.ENAME AS "동료"
   FROM EMPLOYEE A, EMPLOYEE B
 WHERE A.DNO = B.DNO
    AND A.ENAME = 'SCOTT'
    AND B.ENAME<> 'SCOTT';    --SCOTT 제외    

--7.SELF조인 사용-WARD사원보다 늦게 입사한 사원의 이름과 입사일 출력
 SELECT A.ENAME, A.HIREDATE, B.ENAME, B.HIREDATE
   FROM EMPLOYEE A, EMPLOYEE B
 WHERE A.HIREDATE < B.HIREDATE
    AND A.ENAME = 'WARD'
 ORDER BY B.HIREDATE;
 
--TEACHER
 SELECT OTHER.ENAME, OTHER.HIREDATE
   FROM EMPLOYEE WARD, EMPLOYEE OTHER
 WHERE OTHER.HIREDATE > WARD.HIREDATE
    AND WARD.ENAME = 'WARD'
 ORDER BY OTHER.HIREDATE;

--8.SELF조인 - 관리자보다 먼저 입사한 모든 사원의 이름 및 입사일을 관리자의 이름 및 입사일과 함께 출력
-- 별칭 - 이름,관리자이름(ENAME) 사원/관리자입사일(HIREDATE)
 SELECT A.ENAME AS "ENAME", A.HIREDATE AS "HIREDATE", 
        B.ENAME AS "ENAME", B.HIREDATE AS "HIREDATE"
   FROM EMPLOYEE A, EMPLOYEE B
 WHERE A.HIREDATE < B.HIREDATE
    AND A.MANAGER = B.ENO
 ORDER BY B.HIREDATE;
 
--TEACHER
 SELECT OTHER.ENAME AS "ENAME", OTHER.HIREDATE AS "HIREDATE", 
        MGR.ENAME AS "ENAME", MGR.HIREDATE AS "HIREDATE"
   FROM EMPLOYEE MGR, EMPLOYEE OTHER
 WHERE OTHER.MANAGER = MGR.ENO
    AND OTHER.HIREDATE <= MGR.HIREDATE;















